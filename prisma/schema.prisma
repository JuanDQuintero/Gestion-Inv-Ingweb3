// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Enum_RoleName {
  ADMIN
  USER
}

enum MovementType {
  ENTRADA
  SALIDA
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime @default(now())
  role          Role?    @relation(fields: [roleId], references: [id])
  roleId        String?
  accounts      Account[]
  sessions      Session[]
  profile       Profile?
  materials     Material[] @relation("MaterialCreatedBy")
  movements     Movement[] @relation("MovementPerformedBy")
}

model Profile {
  id           String   @id @default(cuid())
  document     String? @unique
  phoneNumber  String?
  user         User     @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Role {
  id        String   @id @default(cuid())
  name      Enum_RoleName
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Material {
  id          String     @id @default(cuid())
  name        String      @unique
  balance     Int
  createdAt   DateTime
  createdBy   User       @relation("MaterialCreatedBy", fields: [createdById], references: [id])
  createdById String
  movements   Movement[]
}

model Movement {
  id            String     @id @default(cuid())
  dateMov       DateTime
  quantityIn    Int        @default(0)
  quantityOut   Int        @default(0)
  type          MovementType     
  material      Material   @relation(fields: [materialId], references: [id])
  materialId    String
  performedBy   User       @relation("MovementPerformedBy", fields: [performedById], references: [id])
  performedById String
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
